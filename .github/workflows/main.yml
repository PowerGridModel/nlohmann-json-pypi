name: Upload nlohmann-json to PyPI

on:
  pull_request:
  workflow_dispatch:

jobs:

  get-versions:
    name: "Upload latest nlohmann-json version to PyPI"
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
        architecture: x64

    - name: Install dependencies
      run: pip install build

    - name: Enable brew
      run: echo "/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin" >> $GITHUB_PATH

    - name: Download nlohmann-json
      run: brew install nlohmann-json

    - name: Get latest version
      id: version
      run: echo "latest=$(brew list --version nlohmann-json | sed -e 's/nlohmann-json\s//')" >> $GITHUB_OUTPUT

    - name: List version
      run: echo "latest=${{ steps.version.outputs.latest }}"

    - name: Get the nlohmann-json contents
      run: cp -r /home/linuxbrew/.linuxbrew/Cellar/nlohmann-json/${{ steps.version.outputs.latest }}/include/* src/nlohmann_json/include

    - name: Set PyPI Version
      run: echo "${{ steps.version.outputs.latest }}" >> PYPI_VERSION

    - name: Show contents
      run: ls -ahl src/nlohmann_json/include

    - name: Build wheel
      run:  python -m build --wheel --outdir wheelhouse .
    
    - name: Test wheel
      run: |
        pip install wheelhouse/*
        pip install pytest
        pytest

    - name: Keep Wheel file
      uses: actions/upload-artifact@v4
      with:
        name: wheelhouse
        path: ./wheelhouse/*.whl

    - name: List assets
      run: ls ./wheelhouse/ -al

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write  # Required for Trusted Publishing
    needs: get-versions
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Download assets from GitHub release
        uses: robinraju/release-downloader@v1
        with:
          repository: ${{ github.repository }}
          # download the latest release
          latest: true
          # don't download pre-releases
          preRelease: false
          fileName: "*"
          # don't download GitHub-generated source tar and zip files
          tarBall: false
          zipBall: false
          # create a directory to store the downloaded assets
          out-file-path: assets-to-publish
          # don't extract downloaded files
          extract: false

      - name: List downloaded assets
        run: ls -la assets-to-publish
      
      - name: Upload assets to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # To test, use the TestPyPI:
          repository-url: https://test.pypi.org/legacy/
          # You must also create an account and project on TestPyPI,
          # as well as set the trusted-publisher in the project settings:
          # https://docs.pypi.org/trusted-publishers/adding-a-publisher/
          # To publish to the official PyPI repository, just keep
          # repository-url commented out.
          packages-dir: assets-to-publish
          skip-existing: true
          print-hash: true
          verbose: true
